

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.AuthenticationEntryPoint;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.ObjectMapper;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@Component
public class JwtAuthenticationEntryPoint implements AuthenticationEntryPoint{
	@Autowired
	private ObjectMapper objectMapper;

	@Override
	public void commence(HttpServletRequest request, HttpServletResponse response,
			AuthenticationException authException) throws IOException, ServletException {
		String expired = (String) request.getAttribute("expired");
		String unsupported = (String) request.getAttribute("unsupported");
		String invalid = (String) request.getAttribute("invalid");
		String illegal = (String) request.getAttribute("illegal");
		String notfound = (String) request.getAttribute("notfound");
		String message;
		
		if (expired!=null) {
			message = expired;
		}else if(unsupported!=null){
			message = unsupported;
		}else if (invalid!=null) {
			message = invalid;
		}else if (illegal!=null) {
			message = illegal;
		}else if(notfound!=null) {
			message= invalid;
		}else {
			message = authException.getMessage();
		}
		
		response.getWriter().write(objectMapper.writeValueAsString(message));
		response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
		response.setContentType(MediaType.APPLICATION_JSON_VALUE);
		
	}

}

